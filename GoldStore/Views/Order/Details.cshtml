@model GoldStore.Models.OrderModel

@{
    ViewBag.Title = "Order Details";
}


<script type="text/javascript"> 
    $(document).ready(function () {
        
    });
    function OpenWindow(query, w, h, scroll) {
        var l = (screen.width - w) / 2;
        var t = (screen.height - h) / 2;

        winprops = 'resizable=0, height=' + h + ',width=' + w + ',top=' + t + ',left=' + l + 'w';
        if (scroll) winprops += ',scrollbars=1';
        var f = window.open(query, "_blank", winprops);
    }
</script>

<h3>Order Details</h3>

<div>
     
    <hr />

    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.OrderCode)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderCode)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OrderStatusId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderStatusId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OrderTotal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderTotal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.OrderDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OrderDate)
        </dd>

    </dl>

    <hr />
    <div class="pull-right">
        <button type="submit" id="btnAddOrderItem"
                onclick="javascript:OpenWindow('@(Url.Action("CreateOrderItem", "Order", new { OrderId = Model.Id, btnId = "btnAddOrderItemRefresh", formId = "Order-form"}))', 800, 600, true); return false;"
                class="btn btn-primary" style=" margin-bottom=5px;">
            Add Order Item
        </button>

    </div>
    
    <table class="table">
        <tr>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.Id)*@
                Id
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.OrderId)*@
                OrderId
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.ProductId)*@
                ProductId
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.OrderDate)*@
                ProductName
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.OrderDate)*@
                Quantity
            </th>
            <th>
                @*@Html.DisplayNameFor(model => model.Items.OrderDate)*@
                Cost
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.OrderItems)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OrderId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cost)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
        }

    </table>



</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
