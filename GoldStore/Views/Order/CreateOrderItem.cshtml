@model GoldStore.Models.OrderItemModel

@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = "Add Order Item";
} 

<h4>Add Order Item to [@ViewBag.OrderCode] </h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
         

        <div class="form-group">
            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownList("ProductId", new SelectList(Model.AvailableProducts, "Value", "Text"), "--Please select a product--", htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*@Html.DropDownList("ProductId", new SelectList(Model.AvailableProducts, "Value", "Text"), htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.DropDownListFor(model => model.ProductId, new SelectList(Model.AvailableProducts, "Value", "Text"), "--Please select a Product--", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })
            </div>
            
            @*<script>
                $(document).ready(function() {
                    var discountsIdsInput = $('#@Html.FieldIdFor(model => model.SelectedDiscountIds)').data("kendoMultiSelect");
                    discountsIdsInput.setOptions({
                        autoClose: false
                    });

                    @if (Model.AvailableDiscounts.Count == 0)
                    {
                        <text>
                            discountsIdsInput.setOptions({
                                enable: false,
                                placeholder: '@T("Admin.Catalog.Products.Fields.Discounts.NoDiscounts")'
                            });
                            discountsIdsInput._placeholder();
                            discountsIdsInput._enable();
                            </text>
                    }
                });
            </script>*@

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
} 

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
